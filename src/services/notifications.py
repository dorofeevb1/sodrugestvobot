from datetime import datetime
from typing import Dict, List
import logging
from src.config.config import NOTIFICATION_THRESHOLD
from collections import deque

logger = logging.getLogger(__name__)

class NotificationService:
    def __init__(self):
        self.notification_queue = deque(maxlen=1000)  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –æ—á–µ—Ä–µ–¥–∏

    def check_price_change(self, product_id: int, old_price: float, new_price: float) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ü–µ–Ω—ã"""
        if old_price == 0:
            return False
        
        price_change = abs(new_price - old_price) / old_price
        return price_change >= NOTIFICATION_THRESHOLD

    def add_notification(self, user_id: int, product_id: int, 
                        old_price: float, new_price: float, product_name: str):
        """–î–æ–±–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –æ—á–µ—Ä–µ–¥—å"""
        notification = {
            'user_id': user_id,
            'product_id': product_id,
            'old_price': old_price,
            'new_price': new_price,
            'product_name': product_name,
            'timestamp': datetime.utcnow().isoformat()
        }
        
        try:
            self.notification_queue.append(notification)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {str(e)}")

    def get_pending_notifications(self) -> List[Dict]:
        """–ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –æ–∂–∏–¥–∞—é—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
        notifications = []
        while self.notification_queue:
            notifications.append(self.notification_queue.popleft())
        return notifications

    def format_notification_message(self, notification: Dict) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
        price_change = notification['new_price'] - notification['old_price']
        change_percent = (price_change / notification['old_price']) * 100
        
        emoji = "üìà" if price_change > 0 else "üìâ"
        direction = "–≤—ã—Ä–æ—Å–ª–∞" if price_change > 0 else "—É–ø–∞–ª–∞"
        
        return (
            f"{emoji} *–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã*\n\n"
            f"–¢–æ–≤–∞—Ä: {notification['product_name']}\n"
            f"–¶–µ–Ω–∞ {direction} –Ω–∞ {abs(change_percent):.1f}%\n"
            f"–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: {notification['old_price']}‚ÇΩ\n"
            f"–ù–æ–≤–∞—è —Ü–µ–Ω–∞: {notification['new_price']}‚ÇΩ"
        ) 